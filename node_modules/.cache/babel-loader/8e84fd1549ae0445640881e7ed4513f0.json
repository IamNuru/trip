{"ast":null,"code":"import { GET_PLACES, SET_LOADING, FILTER_PLACES, GET_WEATHER, PLACE_ERRORS, SET_CURRENT_PLACE } from \"../actions/types\";\nconst initialState = {\n  places: null,\n  filteredPlaces: null,\n  loading: true,\n  current: null,\n  weather: null,\n  errors: null\n}; // eslint-disable-next-line\n\nexport default ((state = initialState, action) => {\n  var _action$payload$data, _state$places;\n\n  switch (action.type) {\n    case GET_PLACES:\n      return { ...state,\n        places: (_action$payload$data = action.payload.data) === null || _action$payload$data === void 0 ? void 0 : _action$payload$data.filter(place => place.name && place.num_reviews > 0),\n        filteredPlaces: null,\n        loading: false\n      };\n\n    case FILTER_PLACES:\n      return { ...state,\n        filteredPlaces: (_state$places = state.places) === null || _state$places === void 0 ? void 0 : _state$places.filter(place => place.rating >= action.payload),\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_WEATHER:\n      return { ...state,\n        weather: action.payload,\n        loading: false\n      };\n\n    case SET_CURRENT_PLACE:\n      return { ...state,\n        current: action.payload,\n        loading: false\n      };\n\n    case PLACE_ERRORS:\n      return { ...state,\n        loading: false,\n        errors: \"Something went wrong. Please refresh!!!\"\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/generous/projects/trip/src/redux/reducers/Place.jsx"],"names":["GET_PLACES","SET_LOADING","FILTER_PLACES","GET_WEATHER","PLACE_ERRORS","SET_CURRENT_PLACE","initialState","places","filteredPlaces","loading","current","weather","errors","state","action","type","payload","data","filter","place","name","num_reviews","rating"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,WAAjD,EAA6DC,YAA7D,EAA2EC,iBAA3E,QAAoG,kBAApG;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC,IADU;AAEjBC,EAAAA,cAAc,EAAC,IAFE;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,OAAO,EAAC,IAJS;AAKjBC,EAAAA,OAAO,EAAC,IALS;AAMjBC,EAAAA,MAAM,EAAC;AANU,CAArB,C,CASA;;AACA,gBAAe,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAAA;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKf,UAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFN,QAAAA,MAAM,0BAAEO,MAAM,CAACE,OAAP,CAAeC,IAAjB,yDAAE,qBAAqBC,MAArB,CAA4BC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,WAAN,GAAoB,CAAvE,CAFN;AAGFb,QAAAA,cAAc,EAAC,IAHb;AAIFC,QAAAA,OAAO,EAAC;AAJN,OAAN;;AAOJ,SAAKP,aAAL;AACI,aAAM,EACF,GAAGW,KADD;AAEFL,QAAAA,cAAc,mBAAEK,KAAK,CAACN,MAAR,kDAAE,cAAcW,MAAd,CAAqBC,KAAK,IAAIA,KAAK,CAACG,MAAN,IAAgBR,MAAM,CAACE,OAArD,CAFd;AAGFP,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAMJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGY,KADD;AAEFJ,QAAAA,OAAO,EAAC;AAFN,OAAN;;AAKJ,SAAKN,WAAL;AACI,aAAM,EACF,GAAGU,KADD;AAEFF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAFd;AAGFP,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAOJ,SAAKJ,iBAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFd;AAGFP,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAMJ,SAAKL,YAAL;AACI,aAAM,EACF,GAAGS,KADD;AAEFJ,QAAAA,OAAO,EAAC,KAFN;AAGFG,QAAAA,MAAM,EAAC;AAHL,OAAN;;AAOJ;AACI,aAAOC,KAAP;AA/CR;AAiDH,CAlDD","sourcesContent":["import { GET_PLACES, SET_LOADING, FILTER_PLACES, GET_WEATHER,PLACE_ERRORS, SET_CURRENT_PLACE } from \"../actions/types\"\n\nconst initialState = {\n    places:null,\n    filteredPlaces:null,\n    loading:true,\n    current:null,\n    weather:null,\n    errors:null,\n}\n\n// eslint-disable-next-line\nexport default (state = initialState, action) => {\n    switch(action.type){\n\n        case GET_PLACES:\n            return{\n                ...state,\n                places: action.payload.data?.filter(place => place.name && place.num_reviews > 0),\n                filteredPlaces:null,\n                loading:false\n            }\n\n        case FILTER_PLACES:\n            return{\n                ...state,\n                filteredPlaces: state.places?.filter(place => place.rating >= action.payload),\n                loading: false\n            }\n\n        case SET_LOADING:\n            return{\n                ...state,\n                loading:true\n            }\n\n        case GET_WEATHER:\n            return{\n                ...state,\n                weather: action.payload,\n                loading: false\n\n            }\n\n        case SET_CURRENT_PLACE:\n            return{\n                ...state,\n                current: action.payload,\n                loading: false\n            }\n\n        case PLACE_ERRORS:\n            return{\n                ...state,\n                loading:false,\n                errors:\"Something went wrong. Please refresh!!!\"\n            }\n\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}