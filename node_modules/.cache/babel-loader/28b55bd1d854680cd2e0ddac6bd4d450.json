{"ast":null,"code":"import { GET_PLACES, SET_LOADING, FILTER_PLACES } from \"../actions/types\";\nconst initialState = {\n  places: null,\n  filteredPlaces: null,\n  loading: true,\n  currentPlace: null\n};\nexport default ((state = initialState, action) => {\n  var _action$payload$data;\n\n  switch (action.type) {\n    case GET_PLACES:\n      return { ...state,\n        places: (_action$payload$data = action.payload.data) === null || _action$payload$data === void 0 ? void 0 : _action$payload$data.filter(place => place.name && place.num_reviews > 0),\n        filteredPlaces: null,\n        loading: false\n      };\n\n    case FILTER_PLACES:\n      return { ...state,\n        filteredPlaces: state.places.filter(place => place.ratings >= action.payload)\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/generous/projects/trip/src/redux/reducers/Place.jsx"],"names":["GET_PLACES","SET_LOADING","FILTER_PLACES","initialState","places","filteredPlaces","loading","currentPlace","state","action","type","payload","data","filter","place","name","num_reviews","ratings"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,kBAAvD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC,IADU;AAEjBC,EAAAA,cAAc,EAAC,IAFE;AAGjBC,EAAAA,OAAO,EAAC,IAHS;AAIjBC,EAAAA,YAAY,EAAC;AAJI,CAArB;AAQA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAAA;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKV,UAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFJ,QAAAA,MAAM,0BAAEK,MAAM,CAACE,OAAP,CAAeC,IAAjB,yDAAE,qBAAqBC,MAArB,CAA4BC,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,WAAN,GAAoB,CAAvE,CAFN;AAGFX,QAAAA,cAAc,EAAC,IAHb;AAIFC,QAAAA,OAAO,EAAC;AAJN,OAAN;;AAOJ,SAAKJ,aAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,cAAc,EAAEG,KAAK,CAACJ,MAAN,CAAaS,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACG,OAAN,IAAiBR,MAAM,CAACE,OAArD;AAFd,OAAN;;AAKJ,SAAKV,WAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFF,QAAAA,OAAO,EAAC;AAFN,OAAN;;AAKJ;AACI,aAAOE,KAAP;AAvBR;AAyBH,CA1BD","sourcesContent":["import { GET_PLACES, SET_LOADING, FILTER_PLACES } from \"../actions/types\"\n\nconst initialState = {\n    places:null,\n    filteredPlaces:null,\n    loading:true,\n    currentPlace:null,\n}\n\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n\n        case GET_PLACES:\n            return{\n                ...state,\n                places: action.payload.data?.filter(place => place.name && place.num_reviews > 0),\n                filteredPlaces:null,\n                loading:false\n            }\n\n        case FILTER_PLACES:\n            return{\n                ...state,\n                filteredPlaces: state.places.filter(place => place.ratings >= action.payload)\n            }\n\n        case SET_LOADING:\n            return{\n                ...state,\n                loading:true\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}