{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/trip/src/components/Map/TheMap.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { connect } from \"react-redux\";\nimport { setCoordinates, setBounds, setChildClicked } from \"../../redux/actions/TheMap\";\nimport mapStyle from \"./mapStyle\";\nimport MarkerContainer from \"./MarkerContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TheMap = ({\n  themap: {\n    coordinates,\n    bounds\n  },\n  place: {\n    places,\n    filteredPlaces,\n    weather\n  },\n  setCoordinates,\n  setBounds,\n  setChildClicked\n}) => {\n  _s();\n\n  var _weather$list;\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(({\n      coords: {\n        latitude,\n        longitude\n      }\n    }) => {\n      setCoordinates(latitude, longitude);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyC2Svm5V3x3n8C03ySFkHrV0gAt6li2iUs\"\n      },\n      defaultCenter: coordinates,\n      center: coordinates,\n      defaultZoom: 14,\n      margin: [50, 50, 50, 50],\n      options: {\n        disableDefaultUI: true,\n        zoomControl: true,\n        styles: mapStyle\n      },\n      onChange: e => {\n        setCoordinates(e.center.lat, e.center.lng);\n        setBounds(e.marginBounds.ne, e.marginBounds.sw);\n      },\n      onChildClick: child => setChildClicked(child),\n      children: [(filteredPlaces === null || filteredPlaces === void 0 ? void 0 : filteredPlaces.length) > 0 ? filteredPlaces === null || filteredPlaces === void 0 ? void 0 : filteredPlaces.map((pl, i) => /*#__PURE__*/_jsxDEV(MarkerContainer, {\n        lat: Number(pl.latitude),\n        lng: Number(pl.longitude),\n        pl: pl\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)) : places === null || places === void 0 ? void 0 : places.map((pl, i) => /*#__PURE__*/_jsxDEV(MarkerContainer, {\n        lat: Number(pl.latitude),\n        lng: Number(pl.longitude),\n        pl: pl\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), weather === null || weather === void 0 ? void 0 : (_weather$list = weather.list) === null || _weather$list === void 0 ? void 0 : _weather$list.map((wea, i) => {\n        console.log(wea);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/w/${wea.weather[0].icon}.png`,\n            alt: \"weather\",\n            height: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TheMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TheMap;\n\nconst mapStateToProps = state => ({\n  themap: state.themap,\n  place: state.place\n});\n\nexport default connect(mapStateToProps, {\n  setCoordinates,\n  setBounds,\n  setChildClicked\n})(TheMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"TheMap\");","map":{"version":3,"sources":["/home/generous/projects/trip/src/components/Map/TheMap.jsx"],"names":["useEffect","GoogleMapReact","connect","setCoordinates","setBounds","setChildClicked","mapStyle","MarkerContainer","TheMap","themap","coordinates","bounds","place","places","filteredPlaces","weather","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","height","width","key","disableDefaultUI","zoomControl","styles","e","center","lat","lng","marginBounds","ne","sw","child","length","map","pl","i","Number","list","wea","console","log","icon","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { connect } from \"react-redux\";\nimport {\n  setCoordinates,\n  setBounds,\n  setChildClicked,\n} from \"../../redux/actions/TheMap\";\n\nimport mapStyle from \"./mapStyle\"\n\nimport MarkerContainer from \"./MarkerContainer\";\nconst TheMap = ({\n  themap: { coordinates, bounds },\n  place: { places, filteredPlaces, weather },\n  setCoordinates,\n  setBounds,\n  setChildClicked,\n}) => {\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setCoordinates(latitude, longitude);\n      }\n    );\n  }, []);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyC2Svm5V3x3n8C03ySFkHrV0gAt6li2iUs\" }}\n        defaultCenter={coordinates}\n        center={coordinates}\n        defaultZoom={14}\n        margin={[50, 50, 50, 50]}\n        options={{disableDefaultUI:true, zoomControl:true, styles:mapStyle}}\n        onChange={(e) => {\n          setCoordinates(e.center.lat, e.center.lng);\n          setBounds(e.marginBounds.ne, e.marginBounds.sw);\n        }}\n        onChildClick={(child) => setChildClicked(child)}\n      >\n        {\n        filteredPlaces?.length > 0 ?\n        filteredPlaces?.map((pl, i) => (\n          <MarkerContainer\n            key={i}\n            lat={Number(pl.latitude)}\n            lng={Number(pl.longitude)}\n            pl={pl}\n          />\n        ))\n        :\n        places?.map((pl, i) => (\n          <MarkerContainer\n            key={i}\n            lat={Number(pl.latitude)}\n            lng={Number(pl.longitude)}\n            pl={pl}\n          />\n        ))\n        }\n        {\n          weather?.list?.map((wea, i)=>{\n            console.log(wea)\n            return <div key={i}>\n              <img src={`https://openweathermap.org/img/w/${wea.weather[0].icon}.png`} alt=\"weather\" height={100} />\n            </div>\n          })\n        }\n      </GoogleMapReact>\n    </div>\n  );\n};\n\n\n\n\nconst mapStateToProps = (state) => ({\n  themap: state.themap,\n  place: state.place,\n});\nexport default connect(mapStateToProps, {\n  setCoordinates,\n  setBounds,\n  setChildClicked,\n})(TheMap);\n"]},"metadata":{},"sourceType":"module"}