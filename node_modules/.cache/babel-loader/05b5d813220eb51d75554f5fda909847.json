{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/trip/src/components/Map/TheMap.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { connect } from \"react-redux\";\nimport { setCoordinates, setBounds } from \"../../redux/actions/TheMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = ({\n  themap: {\n    coordinates,\n    bounds\n  },\n  setCoordinates,\n  setBounds\n}) => {\n  _s();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(({\n      coords: {\n        latitude,\n        longitude\n      }\n    }) => {\n      setCoordinates(latitude, longitude);\n    });\n  }, []);\n  /* useEffect(() => {\n     \n  }, [coordinates, bounds]) */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyC2Svm5V3x3n8C03ySFkHrV0gAt6li2iUs'\n      },\n      defaultCenter: coordinates,\n      center: coordinates,\n      defaultZoom: 14,\n      margin: [50, 50, 50, 50],\n      options: '',\n      onChange: e => {\n        setCoordinates(e.center.lat, e.center.lng);\n        setBounds(e.marginBounds.ne, e.marginBounds.sw);\n      },\n      onChildClick: ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\n\nconst mapStateToProps = state => ({\n  themap: state.themap\n});\n\nexport default connect(mapStateToProps, {\n  setCoordinates,\n  setBounds\n})(Map);\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/generous/projects/trip/src/components/Map/TheMap.jsx"],"names":["useEffect","GoogleMapReact","connect","setCoordinates","setBounds","Map","themap","coordinates","bounds","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","height","width","key","e","center","lat","lng","marginBounds","ne","sw","mapStateToProps","state"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,4BAA1C;;;AAIA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,MAAM,EAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAR;AAA+BL,EAAAA,cAA/B;AAA+CC,EAAAA;AAA/C,CAAD,KAA+D;AAAA;;AACvEJ,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,CAAC;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAD;AAAWC,QAAAA;AAAX;AAAT,KAAD,KAAoC;AACzEX,MAAAA,cAAc,CAACU,QAAD,EAAUC,SAAV,CAAd;AACH,KAFD;AAGF,GAJQ,EAIN,EAJM,CAAT;AAMA;AACJ;AACA;;AAII,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAZ;AAAA,2BACI,QAAC,cAAD;AACA,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADlB;AAEA,MAAA,aAAa,EAAEV,WAFf;AAGA,MAAA,MAAM,EAAEA,WAHR;AAIA,MAAA,WAAW,EAAE,EAJb;AAKA,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CALR;AAMA,MAAA,OAAO,EAAE,EANT;AAOA,MAAA,QAAQ,EAAGW,CAAD,IAAO;AACbf,QAAAA,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,GAAV,EAAeF,CAAC,CAACC,MAAF,CAASE,GAAxB,CAAd;AACAjB,QAAAA,SAAS,CAACc,CAAC,CAACI,YAAF,CAAeC,EAAhB,EAAoBL,CAAC,CAACI,YAAF,CAAeE,EAAnC,CAAT;AACC,OAVL;AAYA,MAAA,YAAY,EAAE;AAZd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAjCD;;GAAMnB,G;;KAAAA,G;;AAoCN,MAAMoB,eAAe,GAAGC,KAAK,KAAI;AAC7BpB,EAAAA,MAAM,EAAEoB,KAAK,CAACpB;AADe,CAAJ,CAA7B;;AAGA,eAAeJ,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAAsDC,GAAtD,CAAf","sourcesContent":["import { useEffect } from \"react\"\nimport GoogleMapReact from \"google-map-react\"\nimport { connect } from \"react-redux\"\nimport { setCoordinates, setBounds } from \"../../redux/actions/TheMap\"\n\n\n\nconst Map = ({themap:{coordinates, bounds}, setCoordinates, setBounds}) => {\n    useEffect(() => {\n       navigator.geolocation.getCurrentPosition(({coords :{latitude, longitude}}) =>{\n           setCoordinates(latitude,longitude)\n       })\n    }, [])\n    \n    /* useEffect(() => {\n       \n    }, [coordinates, bounds]) */\n\n\n\n    return (\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyC2Svm5V3x3n8C03ySFkHrV0gAt6li2iUs'}}\n            defaultCenter={coordinates}\n            center={coordinates}\n            defaultZoom={14}\n            margin={[50, 50, 50, 50]}\n            options={''}\n            onChange={(e) => {\n                setCoordinates(e.center.lat, e.center.lng)\n                setBounds(e.marginBounds.ne, e.marginBounds.sw)\n                }\n            }\n            onChildClick={''}\n            >\n\n            </GoogleMapReact>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state =>({\n    themap: state.themap\n})\nexport default connect(mapStateToProps, {setCoordinates, setBounds})(Map);\n"]},"metadata":{},"sourceType":"module"}