{"ast":null,"code":"var _jsxFileName = \"/home/generous/projects/trip/src/components/Map/TheMap.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { connect } from \"react-redux\";\nimport { setCoordinates, setBounds } from \"../../redux/actions/TheMap\";\nimport fakeResImg from \"../../assets/fakeres.jpg\";\nimport \"./map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = ({\n  themap: {\n    coordinates,\n    bounds\n  },\n  place: {\n    places\n  },\n  setCoordinates,\n  setBounds\n}) => {\n  _s();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(({\n      coords: {\n        latitude,\n        longitude\n      }\n    }) => {\n      setCoordinates(latitude, longitude);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyC2Svm5V3x3n8C03ySFkHrV0gAt6li2iUs\"\n      },\n      defaultCenter: coordinates,\n      center: coordinates,\n      defaultZoom: 14,\n      margin: [50, 50, 50, 50],\n      options: \"\",\n      onChange: e => {\n        setCoordinates(e.center.lat, e.center.lng);\n        setBounds(e.marginBounds.ne, e.marginBounds.sw);\n      },\n      onChildClick: \"\",\n      children: places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markerContainer\",\n        lat: parseInt(place.latitude),\n        lng: parseInt(place.longitude),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-paper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"paper-title\",\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${place.photo ? place.photo.images.small.url : fakeResImg}`,\n            alt: place.name,\n            className: \"paper-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\n\nconst mapStateToProps = state => ({\n  themap: state.themap,\n  place: state.place\n});\n\nexport default connect(mapStateToProps, {\n  setCoordinates,\n  setBounds\n})(Map);\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/generous/projects/trip/src/components/Map/TheMap.jsx"],"names":["useEffect","GoogleMapReact","connect","setCoordinates","setBounds","fakeResImg","Map","themap","coordinates","bounds","place","places","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","height","width","key","e","center","lat","lng","marginBounds","ne","sw","map","i","parseInt","name","photo","images","small","url","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { connect } from \"react-redux\";\nimport { setCoordinates, setBounds } from \"../../redux/actions/TheMap\";\nimport fakeResImg from \"../../assets/fakeres.jpg\";\n\nimport \"./map.css\"\nconst Map = ({\n  themap: { coordinates, bounds },\n  place: { places },\n  setCoordinates,\n  setBounds,\n}) => {\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setCoordinates(latitude, longitude);\n      }\n    );\n  }, []);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyC2Svm5V3x3n8C03ySFkHrV0gAt6li2iUs\" }}\n        defaultCenter={coordinates}\n        center={coordinates}\n        defaultZoom={14}\n        margin={[50, 50, 50, 50]}\n        options={\"\"}\n        onChange={(e) => {\n          setCoordinates(e.center.lat, e.center.lng);\n          setBounds(e.marginBounds.ne, e.marginBounds.sw);\n        }}\n        onChildClick={\"\"}\n      >\n        {places?.map((place, i) => (\n          <div className=\"markerContainer\"\n            key={i}\n            lat={parseInt(place.latitude)}\n            lng={parseInt(place.longitude)}\n          >\n              <div className=\"map-paper\">\n                  <span className=\"paper-title\">{place.name}</span>\n                  <img \n                    src={`${ place.photo ? place.photo.images.small.url : fakeResImg }`}\n                    alt={place.name} \n                    className=\"paper-img\" />\n              </div>\n          </div>\n        ))}\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  themap: state.themap,\n  place: state.place,\n});\nexport default connect(mapStateToProps, { setCoordinates, setBounds })(Map);\n"]},"metadata":{},"sourceType":"module"}